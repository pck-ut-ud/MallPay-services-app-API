FORMAT: 1A
HOST: api.services.mallpay.czt

# MallPay Insurance Application API

## About

This API description is a work in progress. API is not stabilized yet and may change without notice.

## General Info

Here comes the general info about this RESTfull API.
The API is versioned - the purpose is to enable API development without breaking older versions in use. The version is part of the endpoint URL (ie `/v1/`).

### What's the purpose of this API

This API allows partners to retrieve info about services available for eligible products and operations required to set-up such services for their customers.

### General workflow

1. Log in.
2. Create offer - request service offers available for products specified.
3. Create a contract based on above offer of services.
4. Provide required information for the contract.
5. Activate the contract.

__Optional steps__:

6. Cancel the contract.
7. Get contract detail information.

## API Endpoints Description

### Authorize

Enables the partner to log in. It is required to be able to use all the other endpoints.

### Create Offer

Lets the partner to request available services for products. In order to do so, the partner has to provide information about products they require services for. Endpoint response contains services (and their possible combinations) for the provided products.

### Create Contract

Based on an offer received from Create Offer endpoint and their customer choices, enables a partner to create a contract for the services selected. If it was successfully created, response contains information about the created contract, errors explaining what went wrong otherwise.

### Update Contract

Allows a partner to update a previously created non-activated? contract. This may be needed to fill-in certain allowed, previously unknown data at the time of product packaging or shipping - product serial number, for example. Only some parts of the contract may be updated this way.
In case of success, response contains updated contract, errors otherwise.

### Activate Contract

In order for us to be able to fulfill any contract, the contract has to be activated first. This typically happens at the time of product shipping or delivery, depending on partner circumstances.

**NOTE:** Activate Contract also sends contract activation information to customers e-mail address.

### Cancel Contract

Subject to general terms and conditions, a contract can also be canceled. Response contains contract detail or errors, if something went wrong.

**NOTE:** Cancel Contract also sends contract cancellation information message to customers e-mail address.

### Contract Detail

Provides information about created contracts and their status. 

## Authorize [/v1/partner/authorize]

### Request Authorization [POST]
Log in to be able to use other endpoints.

+ Request (application/json; charset=utf-8)
    + Attributes (AuthorizationRequest)

+ Response 200 (application/json; charset=utf-8)
    + Attributes (AuthorizationResponse)

## Create Offer [/v1/offer]

### Request Available Services [POST]
Get info on services available for sent products.

+ Request (application/json; charset=utf-8)
    + Attributes (RequestServicesRequest)

+ Response 200 (application/json; charset=utf-8)
    + Attributes (RequestServicesResponse)

## Create Contract [/v1/contract]

### Create Contract [POST]
Create a contract based on available services offering.

+ Request (application/json; charset=utf-8)
    + Attributes (ContractCreateRequest)

+ Response 200 (application/json; charset=utf-8)
    + Attributes (ContractCreateResponse)

## Contract Operations [/v1/contract/{contract_id}]

### Contract Detail [GET]
Get detail - status of selected Contract.

+ Request (application/json; charset=utf-8)

+ Response 200 (application/json; charset=utf-8)
    + Attributes (ContractStatusResponse)

### Update Contract Full [PUT]
Update selected contract.

+ Request (application/json; charset=utf-8)
    + Attributes (ContractUpdateRequest)

+ Response 200 (application/json; charset=utf-8)
    + Attributes (ContractUpdateResponse)

### Update Contract Partial [PATCH]
Update selected contract.

+ Request (application/json; charset=utf-8)
    + Attributes (ContractPartialUpdateRequest)

+ Response 200 (application/json; charset=utf-8)
    + Attributes (ContractUpdateResponse)


# Data Structures

## AuthorizationRequest (object)
### Properties
+ `username`: `eShopUsername` (string, required) - Partner username
+ `password`: `eShopPassword` (string, required) - Partner password

## AuthorizationResponse (object)
### Properties
+ `accessToken`: `secretaccessToken` (string, required) - Secret access token
+ `expiresIn`: 7200 (number, required) - Remaining token validity time (in seconds)

## RequestServicesRequest (object)
### Properties
+ `items` (array[ServiceRequestProduct], required) - Array of products you want to receive possible services for. If you order multiple pieces of the same product, it is expected each piece will be represented by separate item, hence there is no quantity field.

## RequestServicesResponse (object)
### Properties
+ `offerId`: `UUID-comes-here` (string, required) - Id of the offers
+ `items` (array[ServiceResponseProduct], required) - description

## ContractCreateRequest (CreateContract)
Request for creating contract.
### Properties

## ContractCreateResponse (ResponseContract)
Returns created `Contract`, errors otherwise.
### Properties

## ContractDetailRequest (object)
### Properties

## ContractStatusResponse (ResponseContract)
### Properties

## ContractUpdateRequest (UpdateContract)
Fully update selected `Contract`. Only allows updating certain contract properties. in case you need to update other properties, which this method does not allow to change, you should request a new services offert and create a new contract.
### Properties

## ContractPartialUpdateRequest (PartialUpdateContract)
Partially update selected `Contract`.

## ContractUpdateResponse (ResponseContract)
### Properties

## Amount (object)
Financial amount, including VAT
### Properties
+ `amount`: 12590 (number, required) - Amount in minor units (12590 represents 125,90 CZK) [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)
+ `currency`: `CZK` (string, required) - Amount currency. [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)

## VatAmount (Amount)
Financial amount with VAT rate. Usually just VAT part of Total price.
### Properties
+ `vatRate`: 15 (number, required) - VAT rate as natural number (15 represents 15% rate)

## ServiceAmount(Amount)
Type of financial ammount.
### Properties
+ `priceType`: `ABSOLUTE` (enum, optional, nullable) - Type of service offer price
    + `ABSOLUTE` -  Price of service offer is absolute
    + `PERCENT` - Price of service offer is constructed as a fraction of `unitPrice` of product this service is covering.

## BaseProduct (object)
### Properties
+ `name`: Nikon F (string, required) - Full product name
+ One Of
    + `ean`: 1123456789123 (number, optional, nullable) - GTIN (EAN13), 13 or 14 digits length. May be used to improve product matching accuracy.
    + `code`: `NIKON-F-BLACK-1964` (string, optional, nullable) - Optional product manufacturers code/SKU.  May be used to improve product matching accuracy.
+ `condition`: `NEW` (enum, required)
    + `NEW` - new product
    + `USED` - used product
    + `UNPACKED` - like new product, possibly returned by customer in 14 day period after purchase. Also new products with damaged packaging. 
    + `OTHER`

## ServiceRequestProduct (BaseProduct)
### Properties
+ `totalPrice` (Amount, optional) - Total price for all items
+ `totalVat` (VatAmount, optional) - Total VAT for all items
+ `unitPrice` (Amount, required) - Price per one piece, including VAT.
+ `unitVat` (VatAmount, required) - VAT amount per one piece.
+ `quantity`: 2 (number, required) - Number of products
+ `serialNumbers`: `64001000` (array[string], optional, nullable) - Serial Number of individual product piece. May be required for __Contract__ closing.

## BaseProductDetail (ServiceRequestProduct)
+ `categorySlug`: `Camera-Still-Picture-Analog-35mm` (string, required) - Category slug, is used for product service selection.

## ProductDetail (BaseProductDetail)
+ `id`: `uniqueproductid` (string, required)
+ `categorySlug`: `Camera-Still-Picture-Analog-35mm` (string, required) - Category slug, is used for product service selection.

## ServiceResponseProduct (BaseProductDetail)
### Properties
+ `services` (array[ServiceResponseGroup]) - services available for the product piece

## ContractCreateProduct (object)
### Properties
+ `id`: `uniqueproductid` (string, required) - Id of product returned in request for services

## ServiceResponseItem (object)
Individual selectable service.
### Properties
+ `id`: `1` (string, required) - Unique Id of the service
+ `slug`: `option-slug` (string, required) - Unique slug of option
+ `name`: `ADP (Accidental Damage Protection) 1 year` (string, required)
+ `shortName`: `1 year` (string, required)
+ `description`: `Description of the service, may be quite long` (string, optional, nullable) - Description of a service offering item in the group.
+ `priority`: 1 (number, optional, nullable) - Offer ordering information, lower number means higher priority.
+ `totalPrice` (ServiceAmount, required) - Price of service including VAT and possibly type of price.
+ `totalVat` (VatAmount, required) - Total VAT for service.
+ `standalone`: true (boolean, required) - If service is marked as `standalone`, it is __not__ mutually exclusive with other services within the service group and may be selected individually, much like HTML checkbox. This allows for grouping of services that are not exclusive to each other.

## ServiceResponseGroup (object)
A grouping (for example by type or length) of individual services the customer may select from. Individual services go into `serviceGroupOptions` array.
Unless the individual service is marked as `standalone`, it is assumed that the services within `serviceGroupOptions` mutually exclude each other, much like HTML radio button.
The information above means that multiple service groups are not only encouraged, but may be required.
### Properties
+ `id`: `1` (string, required) - Unique Id of the group.
+ `slug`: `adp-goup-slug` (string, required) - Slug of the category name
+ `name`: `ADP (Accidental Damage Protection) Insurance` (string, required) - Plain text name of options group, will be used for display.
+ `description`: `This is the description of the service group, which may, actually, be much longer than this` (string, optional, nullable) - Description of the group, to display to customers.
+ `options` (array[ServiceResponseItem], required) - A set of mutually exclusive options of (roughly) the same meaning this group is made of.
+ `priority`: 1 (number, optional, nullable) - Priority of the group as a whole, used for ordering of offers. Lower number means higher priority. Groups with same priority can be ordered at will (as long as they are ordered before/after any groups with lower/higher priority. If no priority is provided, may be ordered at will (after higher priority groups).
+ `excludes`: `2`, `3` (array[string], optional, nullable) - Ids of groups this group is mutually exclusive with. Customer cannot select offers from this group and **excludes** group at the same time.

## SimpleContract (object)
### Properties
+ `customer` (CustomerBase, required) - Destionation customer of the services
+ `order` (EshopOrderDetail, required) - Detail of the order from eshop

##EshopOrderDetail (object)
### Properties
+ `merchantName`: `Mall` (string, required) - Name of the e-Shop
+ `number`: `456789123` (string, required) - Order number
+ `variableSymbols`: `123456789`, `987654231` (array[string], optional, nullable) - VariableSymbols ot the order, must contain only numbers formatted as string.
+ `createdDate`: `2018-07-24` (string, required) - Date of order creation
+ `dueDate`: `2018-09-24` (string, optional, nullable) - Due date of the order
+ `invoicingDate`: `2018-08-24` (string, optional, nullable) - Date the order was invoiced
+ `paymentDate`: `2018-09-22` (string, optional, nullable) - Date the order was payed
+ `items` (array[ApplicationRequestOrderItem], optional, nullable) - order items

##EshopOrderItem (object)
### Properties

## OrderItemBase (object)
Order item base information, needed to identify order item

### Properties
+ `code`: `EXC4677-1a` (string, required) - Internal code for item (internal to e-shop). Used to better identify the item for future changes
+ `ean`: 888462064002 (string, optional) - EAN code.
+ `name`: `iPhone 6s 32GB SpaceGray` (string, required) - Item name
+ `quantity`: 1 (number, optional) - Item quantity. If empty, considered as 1.

## ApplicationRequestOrderItem (OrderItemBase)
Order item information, needed to create an application.

### Properties
+ `type` (enum, optional) - Item type
    + `PHYSICAL`
    + `DISCOUNT`
    + `SHIPPING_FEE`
    + `SALES_TAX`
    + `DIGITAL`
    + `GIFT_CARD`
    + `STORE_CREDIT`
    + `FEE`
    + `INSURANCE`
+ `variant`: `32GB SpaceGray` (string, optional) - Item variant
+ `description`: `Mobile phone with 32GB of RAM` (string, optional)
+ `producer`: `Apple` (string, optional)
+ `categories`: `mobile phones`,`FullHD`, `64GB` (array[string], optional) - List of item categories
+ `unitPrice` (Amount, optional) - Price per one piece. If empty, automatically considered that `unitPrice` is `totalPrice` / `quantity`.
+ `unitVat` (VatAmount, optional) - VAT amount per one piece. If empty, automatically considered that `unitVat` is `totalVat` / `quantity`.
+ `totalPrice` (Amount, required) - Total price for all pieces, VAT inclusive
+ `totalVat` (VatAmount, required) - Total VAT amount for all pieces
+ `image` (File, optional) - Item image
+ `productUrl`: `https://www.example.com?itemId=10` (string, optional) - URL of the item in e-shop

## BaseContract (SimpleContract)
### Properties
+ `activationDate`: `2018-05-05T18:34.0002+00:02` (string, optional, nullable) - Datetime of contract activation
+ `cancellationDate`: `2018-12-31T05:11.1234+00:01` (string, optional, nullable) - Datetime of contract cancellation
+ `state`: `NEW` (enum, required) - state of the reason
    + NEW
    + ACTIVE
    + CANCELLED
+ `stateReason`: `CANCELLED_BY_ERP` (enum, optional, nullable) - reason for contract state
    + CANCELLED_BY_ERP
    + CANCELLED_CUSTOM_REASON
    + CANCELLED_GOODS_RETURNED
    + CANCELLED_IN_14_DAYS
    + CANCELLED_NOT_PAID
    + CANCELLED_UNFINISHED
+ `totalPrice` (Amount, optional) - Total order amount, including VAT
+ `totalVat` (array[VatAmount], optional) - Total VAT amounts split by their VAT rates

## ResponseContract (BaseContract)
This is a contract object that the API returns in resonse to most requests.
### Properties
+ `id`: `kasjfkjůladsfkj-adf-12` (string, required) - Contract ID
+ `partnerId`: `fda-456123789` (string, optional, nullable) - Partner contract Id
+ `items` (array[ContractResponseItem], required) - Subject of the contract
+ `documents` (array[ResponseDocument], optional, nullable) - Documents related to the contract, such as printable version of the contract, invoices etc.

## MerchantUrls (object)
### Properties
+ `notificationEndpoint`: `http://www.example.com/notifications` (string, optional, nullable) - Notification endpoint

## CreateContract (SimpleContract)
This is a contract object that the API returns in resonse to most requests.
### Properties
+ `serviceOptionIds`: `1` (array[string], required) - Array of service IDs, only array with one item is allowed. The Id to put here is the service option Id.
+ `merchantUrls` (MerchantUrls, optional) - Merchant's endpoints URLs

## UpdateContract (BaseContract)
This is a contract object that the API returns in resonse to most requests.
### Properties
+ `contractItems` (array[ContractUpdateItem], required) - Subject of the contract

## PartialUpdateContract (object)
This is a contract object that serves the partial contract update.
### Properties
+ `state`: `NEW` (enum, required) - state of the reason
    + NEW
    + ACTIVE
    + CANCELLED
+ `stateReason`: `CANCELLED_BY_ERP` (enum, optional, nullable) - reason for contract state
    + CANCELLED_BY_ERP
    + CANCELLED_CUSTOM_REASON
    + CANCELLED_GOODS_RETURNED
    + CANCELLED_IN_14_DAYS
    + CANCELLED_NOT_PAID
    + CANCELLED_UNFINISHED

## ContractRequestItem (ContractCreateProduct)
### Properties
+ `services` (array[ContractItemService], required) - An array of Contract services for the item

## ContractUpdateItem (ContractRequestItem)
### Properties
+ `serialNumbers`: `ser-num-123`, `ser-num-456` (array[string], optional, nullable) - serial numbers

## ContractResponseItem (ProductDetail)
### Properties
+ `services` (array[ContractItemService], required) - An array of Contract services for the item

## ContractItemService
### Properties
+ `offerId`: `UUID-comes-here` (string, required) - Id of the original offer the contract is based upon. Enables creating one contract
+ `serviceId`: `1` (string, required) - Id of the service option
+ `serviceActiveUntilDate`: `2020-08-03T13:22:5000+00:02` (string, nullable) - datetime of service expiration (when the service is no longer valid)

## Address (object)
Address
### Properties
+ `name`: `John Doe` (string, optional) - Name on address
+ `country`: `CZ` (string, required)

    Country.

    (see [ISO 3166 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2))

+ `city`: `Prague` (string, required) - City.
+ `streetAddress`: `Letenská` (string, required) - Street/city part.
+ `streetNumber`: `22` (string, optional, nullable) - Street number
+ `zip`: `140 00` (string, required) - Postal code
+ `addressType`: `PERMANENT` (enum, required) - Type of the address. Only some of the types are allowed in each context.
    + `PERMANENT` - Permanent residential address
    + `CONTACT` - Contact address
    + `DELIVERY` - Delivery address
    + `BILLING` - Billing address

## CustomerBase (object)
Customer data
### Properties
+ One of
    + properties
        + `firstName`: `John` (string, required) -  Customer first (given) name. Must be paired with `lastName`. Required if `fullName` is empty.
        + `lastName`: `Newborn` (string, required) - Customer last (family) name. Must be paired with `firstName`. Required if `fullName` is empty.
        + `titleBefore`: `Ing.` (string, optional, nullable) - Academical degree, in front of the name
        + `titleAfter`: `CSc.` (string, optional, nullable) - Academical degree, behind name
    + `fullName`: `Ing. John Newborn, Csc.` (string, required) - Customer full name, including academical degrees and salutation. Required only if `firstName` or `lastName` are empty.
+ `email`: `john.newborn@country.com` (string, required) - E-mail address of customer
+ `phone`: `+420123456789` (string, required) - Phone number with country code (including leading `+`)
+ `addresses` (array[Address], optional) - Addresses. All types are allowed.
+ `tin`: `12333321` (string, optional, nullable) - Tax identification number (ICO)
+ `vatin`: `CZ8402154456` (string, optional, nullable) - VAT identification number
+ `partnerCustomerId`: `123` (string, optional, nullable) - ID of customer in eshop

## Error (object)
### Properties
+ code: `ERR_1000_SOME_ERROR_CODE` (string, required) - Unique internal error code
+ message: `Some error/validation message description` (string, required) - Human readable error description (non-localized)
<!-- + severity (enum, required)
    + ERROR - Critical error, execution cannot continue. This MUST be indicated also by appropriate HTTP status code
    + WARN - Non-critical error, execution can continue but further user interaction is advisable. This MIGHT be indicated also by appropriate HTTP status code
    + INFO - Information only, execution can continue without user interaction -->
+ attribute: `personalBirthNumber` (string, optional) - JSON path of request attribute that caused the error (if applicable)
<!-- + ticketId: `UAT1:AMS:20160516-091658.450:45e4` (string, optional) - Internal ticket ID, used for error backtracking -->

## File (object)
Represents a single file.
### Properties
+ `filename`: `invoice.pdf` (string, required) - File name.

## RequestFile (File)
Represents a single file in request.
### Properties
+ One Of
    + `content`: `RmlsZSBjb250ZW50cy4gwq9cXyjjg4QpXy/Crw==` (string, required) - File content (Base64 encoded, maximum size of encoded string is 500kB)
    + `url`: `https://www.example.com/file?id=12345` (string, required) - File URL.

## ResponseFile (File)
Represents a single file in response.
### Properties
+ `url`: `https://www.example.com/file?id=12345` (string, required) - File URL.

## Document (object)
Attached document (e.g. contract, invoice, credit note etc.)
### Properties
+ `type`: `CONTRACT` (enum, required) - Type of the document
    + `CONTRACT` - Full contract
    + `INVOICE` - Invoice
    + `PROFORMA_INVOICE` - Proforma invoice
    + `CREDIT_NOTE` - Credit note
    + `OTHER` - Other document type
    + `IPID` - IPID document type
+ `description`: `This is an invoice` (string, optional) - File description

## RequestDocument (Document)
Document in request
### Properties
+ `file` (RequestFile, required)

## ResponseDocument (Document)
Document in request
### Properties
+ `file` (ResponseFile, required)

## Errors (object)
### Properties
+ errors (array[Error], fixed-type, required) - Array with errors